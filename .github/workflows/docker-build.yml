name: Docker Build

on:
  push:
    branches: [ main ]
    paths:
      - 'Dockerfile'
      - 'docker-compose.yml'
      - 'entrypoint.sh'
      - 'requirements.txt'
      - 'app.py'
      - 'web/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'Dockerfile'
      - 'docker-compose.yml'
      - 'entrypoint.sh'
      - 'requirements.txt'
      - 'app.py'
      - 'web/**'
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        tags: yt-to-jellyfin:test
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Create test directories
      run: |
        mkdir -p ./media
        mkdir -p ./config
    
    - name: Verify Docker image functionality
      run: |
        # Run the container with web-only mode to check it starts correctly
        docker run --name yt-to-jellyfin-test -d \
          -v $PWD/media:/media \
          -v $PWD/config:/config \
          -p 8000:8000 \
          -e WEB_ENABLED=true \
          -e WEB_PORT=8000 \
          -e WEB_HOST=0.0.0.0 \
          yt-to-jellyfin:test --web-only
        
        # Wait for container to start
        sleep 5
        
        # Check if container is running
        if [ "$(docker inspect -f {{.State.Running}} yt-to-jellyfin-test)" = "true" ]; then
          echo "Container is running"
        else
          echo "Container failed to start"
          docker logs yt-to-jellyfin-test
          exit 1
        fi
        
        # Try to access the web interface
        curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/ | grep 200
        
        # Clean up
        docker stop yt-to-jellyfin-test
        docker rm yt-to-jellyfin-test